var onRun = function(context) {
  var doc = context.document;
  var sharedStyles=doc.documentData().layerTextStyles();
  var queryString;

  showOptions();
  removeAllStyles();

  var styles = getSheetsu();

  for(var i=0; i<styles.length; i++) {
  	createStyle(styles[i]);
  }

  function removeAllStyles() {
    existingStyles = doc.documentData().layerTextStyles().objects();

    while(existingStyles.count() > 0) {
    	style = existingStyles.objectAtIndex(0);
    	[existingStyles removeObject:style];
    }
  }

  function getSheetsu() {
    var request = NSMutableURLRequest.new();
    [request setHTTPMethod:@"GET"];
    [request setURL:[NSURL URLWithString:queryString]];

    var error = NSError.new();
    var responseCode = null;

    var oResponseData = [NSURLConnection sendSynchronousRequest:request returningResponse:responseCode error:error];

    var dataString = [[NSString alloc] initWithData:oResponseData encoding:NSUTF8StringEncoding];


    var data = JSON.parse(dataString);

    return data.result;
  }

  function showOptions() {
    var alert = [NSAlert alertWithMessageText: "Sync text styles"
                                   defaultButton:"Sync"
                                 alternateButton:"Cancel"
                                     otherButton:nil
                       informativeTextWithFormat:"Enter the URL where your styles live."];

    var input = [[NSTextField alloc] initWithFrame:NSMakeRect(0, 0, 300, 24)];
    input.setStringValue("https://sheetsu.com/apis/a49fa7c8");
    input.autorelease();
    alert.setAccessoryView(input);
    var button = alert.runModal();
    input.validateEditing();
    queryString = input.stringValue();
  }

  function createStyle(style) {
    if(style.Style == "") { return; }

    var color = MSColor.colorWithSVGString("#" + style.Color);
    color.alpha = style.Opacity;

    textLayer = doc.currentPage().addLayerOfType('text');

    textLayer.setFontSize(style.Size);
    textLayer.setLineSpacing(style.Height);
    textLayer.setTextColor(color);
    textLayer.setFontPostscriptName(style.Typeface);

    sharedStyles.addSharedStyleWithName_firstInstance(style.Style, textLayer.style());

    doc.currentPage().removeLayer(textLayer);
  }

}
