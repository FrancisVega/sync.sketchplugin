@import 'typography.js';

var onRun = function(context) {
  var doc = context.document;
  var dict = NSThread.mainThread().threadDictionary();

  showOptions();

  var styles = getData(dict['syncSource']);

  loadTypography(styles, doc.documentData().layerTextStyles());

  doc.showMessage('Sync complete!');

  updatePanelHack();

  function getData(queryURL) {
    var isGoogleSheet = queryURL.indexOf("google.com") > -1

    if(isGoogleSheet) {
      var sheetID=queryURL.substring(queryURL.lastIndexOf("/d/")+3,queryURL.lastIndexOf("/pubhtml"));
      queryURL = "https://spreadsheets.google.com/feeds/list/" + sheetID + "/1/public/values?alt=json";
    }

    var request = NSMutableURLRequest.new();
    [request setHTTPMethod:@"GET"];
    [request setURL:[NSURL URLWithString:queryURL]];

    var error = NSError.new();
    var responseCode = null;

    var oResponseData = [NSURLConnection sendSynchronousRequest:request returningResponse:responseCode error:error];

    var dataString = [[NSString alloc] initWithData:oResponseData encoding:NSUTF8StringEncoding];

    var data = JSON.parse(dataString);

    if(isGoogleSheet) {
      return formatGoogleResponse(data);
    } else {
      return data.result;
    }

  }

  function formatGoogleResponse(data) {
    var result = [];
    var items = data.feed.entry;
    for(var i=0; i<items.length; i++) {
      var item = items[i];
      var resultItem = {}
      for(var key in item) {
        var attr = key.split('gsx$')[1];
        if(!attr) { continue; }
        attr = capitalize(attr);
        resultItem[attr] = item[key]['$t'];
      }
      result.push(resultItem);
    }
    return result;
  }

  function showOptions() {
    var alert = [NSAlert alertWithMessageText: "Sync text styles"
                                   defaultButton:"Sync"
                                 alternateButton:"Cancel"
                                     otherButton:nil
                       informativeTextWithFormat:"Enter the URL where your styles live."];

    var input = [[NSTextField alloc] initWithFrame:NSMakeRect(0, 0, 300, 54)];
    input.setStringValue(dict['syncSource'] || "https://docs.google.com/spreadsheets/d/1LunoLOZbmcyGORV5mCe6qKPdN0NVuosm7lNeSo98-tQ/pubhtml");
    alert.setAccessoryView(input);
    var button = alert.runModal();
    input.validateEditing();
    dict['syncSource'] = input.stringValue();
  }

  function updatePanelHack() {
    var selection = context.selection;
    for (var i=0; i < selection.count(); i++) {
      selection[i].setIsSelected(false);
      selection[i].setIsSelected(true);
    }
  }

  function capitalize(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  }

}
